#!/usr/bin/env node
var fs = require('fs');
var $ = require('util');
var _ = require('underscore');
var jslex = require('../src/jslex.js');
var path = require('path');

var opt = require('yargs')
    .usage('JSLex - Javascript Lexical Analyzers Auto Generator\nUsage: jslex lex_file [-t template_file] [-o output_file]')
    .alias('o', 'output')
    .alias('t', 'template')
    .describe('o', 'output file generated, default is same name with lex file')
    .describe('t', 'template file to use, default is nodejs template');
var argv = opt.argv;

if(argv._.length !== 1) {
    opt.showHelp();
    return;
}

if(!_.isString(argv._[0]) || _.isEmpty(argv._[0])) {
    console.log('Error: input lex file can not be empty!');
    return;
}

if(!fs.existsSync(argv._[0]) || !fs.statSync(argv._[0]).isFile()) {
    console.log('Error: input lex file `'+argv._[0]+'` not found!');
    return;
}
if(!argv.template || _.isEmpty(argv.template)) {
    argv.template = path.resolve(path.join(__dirname, '../template/node.tpl.txt'));
    console.log(argv.template);

} else if(!fs.existsSync(argv.template) || !fs.statSync(argv.template).isFile()) {
    console.log('Error: template file `'+argv.template+'` not found!');
    return;
}

if(!_.isString(argv.output) || _.isEmpty(argv.output)) {
    var bn = path.basename(argv._[0], '.lex');
    var ext = path.extname(argv._[0]);
    var dir = path.dirname(path.resolve(argv._[0]));
    if(ext === '.lex') {
        argv.output = path.join(dir, bn + '.js');
    } else {
        argv.output = path.join(dir, argv._[0] + '.js');
    }
}

var output = jslex.parse(fs.readFileSync(argv._[0]).toString(), fs.readFileSync(argv.template).toString());

fs.writeFileSync(argv.output, output, {
    mode : 0777
});

console.log("Done. Write file to '" + argv.output + "'");