if( typeof Daisy === 'undefined')
	Daisy = {};
if( typeof Daisy.Lexer === 'undefined')
	Daisy.Lexer = {};
	
(function(D, L) {
	var $$_LEX_STATES_$$;
	
	L.$$_LEX_NAME_$$ = function(editor) {
		this.editor = editor;
		this.src = null;
		this.theme = editor.theme;
		this.end = 0;
		this.idx = 0;
		this.chr = -1;
		this.i_s = $$_INIT_STATE_$$;
		this.yydefault = "default";
		this.yystyle = null;
		this.TABLE = {
			_base : (window.Int32Array?new Int32Array($$_BASE_LEN_$$):new Array($$_BASE_LEN_$$)),
			_default : (window.Int32Array?new Int32Array($$_DEFAULT_LEN_$$):new Array($$_DEFAULT_LEN_$$)),
			_check : (window.Int32Array?new Int32Array($$_CHECK_LEN_$$):new Array($$_CHECK_LEN_$$)),
			_next : (window.Int32Array?new Int32Array($$_NEXT_LEN_$$):new Array($$_NEXT_LEN_$$)),
			_action : (window.Int32Array?new Int32Array($$_ACTION_LEN_$$):new Array($$_ACTION_LEN_$$)),
			_eqc : (window.Int32Array?new Int32Array($$_EQC_LEN_$$):new Array($$_EQC_LEN_$$))
		};

		L.Help._str_to_arr(["$$_BASE_STR_$$", "$$_DEFAULT_STR_$$", "$$_CHECK_STR_$$","$$_NEXT_STR_$$", "$$_ACTION_STR_$$", "$$_EQC_STR_$$"], [this.TABLE._base, this.TABLE._default, this.TABLE._check, this.TABLE._next, this.TABLE._action, this.TABLE._eqc]);

	}

	L.$$_LEX_NAME_$$.prototype = {
	
		read_ch : function() {
			if(this.idx >= this.end)
				return this.chr = -1;
			else{
				this.chr = this.src[this.idx++].charCodeAt(0);
				if(this.chr>=65&&this.chr<=90)
					this.chr += 32;
				return this.chr;
			}
		},
		do_lex : function() {
			var go_on = true;
			this.idx = 0;
			while(go_on) {
				var yylen = 0;
				var state = this.i_s, action = L.ACT_TYPE.NO_ACTION;
				var pre_idx = this.idx, pre_action = L.ACT_TYPE.NO_ACTION, pre_act_len = 0;

				while(true) {
					if(this.read_ch() < 0) {
						if(pre_action >= 0) {
							action = pre_action;
							yylen = pre_act_len;
							this.idx = pre_idx + pre_act_len;
						} else if(pre_idx < this.end) {
							action = L.ACT_TYPE.UNMATCH_CHAR;
							this.idx = pre_idx + 1;
						}
						if(pre_idx >= this.end) {
							go_on = false;
						}
						break;
					} else {
						yylen++;
					}
					var eqc = this.TABLE._eqc[this.chr];
					
					if(eqc === undefined) {
						if(pre_action >= 0) {
							action = pre_action;
							yylen = pre_act_len;
							this.idx = pre_idx + pre_act_len;
						}else
							action = L.ACT_TYPE.UNKNOW_CHAR;
						break;
					}
					var offset, next = -1, s = state;

					while(s >= 0) {
						offset = this.TABLE._base[s] + eqc;
						if(this.TABLE._check[offset] === s) {
							next = this.TABLE._next[offset];
							break;
						} else {
							s = this.TABLE._default[s];
						}
					}

					if(next < 0) {
						if(pre_action >= 0) {
							action = pre_action;
							yylen = pre_act_len;
							this.idx = pre_idx + pre_act_len;
						} else {
							action = L.ACT_TYPE.UNMATCH_CHAR;
							this.idx = pre_idx + 1;
						}
						//跳出内层while，执行对应的action动作
						break;
					} else {
						state = next;
						action = this.TABLE._action[next];
						if(action >= 0) {
							/**
							 * 如果action>=0，说明该状态为accept状态。
							 */
							pre_action = action;
							pre_act_len = yylen;
						}
					}
				}
	
				switch(action) {
					

					$$_ACTION_TABLE_$$
					
					case L.ACT_TYPE.UNKNOW_CHAR:
					case L.ACT_TYPE.UNMATCH_CHAR:
					default :
						this.yystyle = this.yydefault;
						break;
				}
				this.editor.cur_doc.setRangeStyle(pre_idx,yylen,this.yystyle);
			}
			
		},
		yygoto: function(state){
			this.i_s = state;
		},
		lex : function() {
			this.src = this.editor.cur_doc.text_array;
			this.end = this.src.length;
			this.i_s = $$_INIT_STATE_$$;
			this.do_lex();
		}
	}

})(Daisy, Daisy.Lexer);
